{"version":3,"sources":["GlobalStyle.js","Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/index.js","Container/styled.js","Container/index.js","App.js","reportWebVitals.js","index.js","theme.js"],"names":["GlobalStyle","createGlobalStyle","theme","color","gallery","StyledForm","styled","form","breakpoint","mobileMax","Input","input","alto","Button","button","teal","white","Form","addNewTask","useState","newTaskContent","setNewTaskContent","onSubmit","event","preventDefault","trimmedNewTaskContent","trim","value","placeholder","onChange","target","List","ul","Item","li","hidden","css","Content","span","done","toggleDone","forestGreen","remove","crimson","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","onClick","id","content","Wrapper","div","silver","Buttons","toggleHideDone","setAllDone","length","disabled","every","section","Header","header","Title","h2","Body","Section","title","body","extraHeaderContent","Container","children","App","setHideDone","setTasks","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","black","document","getElementById"],"mappings":"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","file":"static/js/main.09d9b3ca.chunk.js","sourcesContent":["import {createGlobalStyle} from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  *, ::after, ::before {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  body {\r\n    font-family: \"Montserrat\", sans-serif;\r\n    font-size: 18px;\r\n    background: ${({ theme }) => theme.color.gallery};\r\n  }\r\n\r\n`;\r\n  \r\n  \r\n  \r\n  ","import { filter } from \"async\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    display: grid;\r\n    grid-template-columns: 1fr auto;\r\n    grid-gap: 20px;\r\n\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n            grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    padding: 10px;\r\n    border: 2px solid ${({ theme }) => theme.color.alto};\r\n    \r\n    `; \r\n    \r\nexport const Button = styled.button`\r\n    padding: 10px;\r\n    background-color: ${({ theme }) => theme.color.teal};\r\n    color: ${({ theme }) => theme.color.white};\r\n    border: none;\r\n    transition: 0.4s;\r\n\r\n    &:hover {\r\n        filter: brigthtness(110%);\r\n        transform: scale(1.1);\r\n}\r\n\r\n    &:active {\r\n        filter: brightness(120%);\r\n}\r\n`;\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Button, Input, StyledForm } from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const trimmedNewTaskContent = newTaskContent.trim();\r\n\r\n        if (!trimmedNewTaskContent) {\r\n            return;\r\n        }\r\n\r\n        addNewTask(trimmedNewTaskContent);\r\n        setNewTaskContent(\"\");\r\n    };\r\n\r\n    return (\r\n        <StyledForm onSubmit={onFormSubmit}>\r\n            <Input\r\n                value={newTaskContent}\r\n                placeholder=\"Co jest do zrobienia?\"\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n            />\r\n\r\n            <Button>Dodaj zadanie</Button>\r\n        </StyledForm>\r\n    )\r\n};\r\n\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    display: grid;\r\n    grid-template-columns: auto 1fr auto;\r\n    grid-gap: 10px;\r\n    align-items: center;\r\n    padding: 10px;\r\n    border-bottom: 2px slid ${({ theme }) => theme.color.alto};\r\n\r\n    \r\n    ${({ hidden }) => hidden && css`\r\n    display: none;\r\n    `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n${({ done }) => done && css`\r\n    text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    border: none;\r\n    color: ${({ theme }) => theme.color.white};\r\n    width: 30px;\r\n    height: 30px;\r\n    padding: 0;\r\n    transition: bacground 0.4;\r\n\r\n    ${({ toggleDone }) => toggleDone && css`\r\n        background: ${({ theme }) => theme.color.forestGreen};\r\n    `}\r\n\r\n    ${({ remove }) => remove && css`\r\n        background: ${({ theme }) => theme.color.crimson};\r\n    `}\r\n\r\n    &:hover {\r\n        filter: brightness(110%);\r\n    }\r\n\r\n    &:active {\r\n        filter: brightness(120%);\r\n    }\r\n`;","import React from \"react\";\r\nimport { List, Item, Content, Button} from \"./styled\";\r\n\r\n\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <List>\r\n        {tasks.map(task => (\r\n            <Item\r\n                key={task.id}\r\n                hidden={task.done && hideDone}\r\n                >\r\n                <Button\r\n                    toggleDone\r\n                    onClick={() => toggleTaskDone(task.id)}\r\n                >\r\n                    {task.done ? \"âœ”\" : \"\"}\r\n                </Button>\r\n                <Content done={task.done}\r\n                >\r\n                    {task.content}\r\n                </Content>\r\n                <Button\r\n                    remove\r\n                    onClick={() => removeTask(task.id)}\r\n                >\r\n                    ðŸ§º\r\n            </Button>\r\n            </Item>\r\n        ))}\r\n    </List>\r\n);\r\n\r\nexport default Tasks;\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    background: transparent;\r\n    border: none;\r\n    margin: 0 0 0 20px;\r\n    transition: 0.4s;\r\n    color: ${({ theme }) => theme.color.teal};\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        flex-basis: 100%;\r\n        margin: 10px;\r\n    }\r\n\r\n\r\n    &:hover {\r\n        filter: brightness(110%);\r\n    }\r\n\r\n    &:active {\r\n        filter: brightness(120%);\r\n    }\r\n\r\n\r\n    &:disabled {\r\n        color: ${({ theme }) => theme.color.silver};\r\n    }\r\n`;","import React from \"react\";\r\nimport { Wrapper, Button } from \"./styled\";\r\n\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n    <Wrapper>\r\n        {tasks.length > 0 && (\r\n            <>\r\n                <Button onClick={toggleHideDone}>\r\n                    {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\r\n            </Button>\r\n                <Button\r\n                    onClick={setAllDone}\r\n                    disabled={tasks.every(({ done }) => done)}\r\n                >\r\n                    UkoÅ„cz wszystkie\r\n            </Button>\r\n            </>\r\n        )}\r\n    </Wrapper>\r\n);\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.section`\r\n    margin: 10px 0;\r\n    background: ${({ theme }) => theme.color.white};\r\n    box-shadow: 0 0 5px ${({ theme }) => theme.color.alto};\r\n`;\r\n\r\nexport const Header = styled.header`\r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    grid-gap: 20px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    border-bottom: 2px solid ${({ theme }) => theme.color.alto};\r\n    padding: 20px;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n    font-size: 20px;\r\n    margin: 0;\r\n`;\r\n\r\nexport const Body = styled.div`\r\n    padding: 20px;\r\n`;\r\n","import React from \"react\";\r\nimport { Wrapper, Body, Header, Title } from \"./styled\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n  <Wrapper>\r\n    <Header>\r\n      <Title>{title}</Title>\r\n      {extraHeaderContent}\r\n    </Header>\r\n<Body>\r\n  {body}\r\n</Body>\r\n</Wrapper>\r\n);\r\n\r\nexport default Section;","import React from \"react\";\r\n\r\nconst Header = ({ title }) => (\r\n  <header>\r\n    <h1>{title}</h1>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    max-width: 900px;\r\n    padding: 20px;\r\n    margin: 0 auto;\r\n    \r\n`;","import React from \"react\";\r\nimport { Wrapper } from \"./styled\";\r\n\r\n\r\nconst Container = ({ children }) => (\r\n    <Wrapper>\r\n        {children}\r\n    </Wrapper>\r\n);\r\n\r\nexport default Container;","import React, { useState, useEffect } from 'react';\r\nimport Form from \"./Form\";\r\nimport Tasks from \"./Tasks\";\r\nimport Buttons from \"./Buttons\";\r\nimport Section from \"./Section\";\r\nimport Header from \"./Header\";\r\nimport Container from \"./Container\";\r\n\r\n\r\nfunction App() {\r\n  const [hideDone, setHideDone] = useState(false);\r\n  const [tasks, setTasks] = useState([\r\n    { id: 1, content: \"przejÅ›Ä‡ na Reacta\", done: false },\r\n    { id: 2, content: \"pojÅ›Ä‡ na trening\", done: true },\r\n  ]);\r\n\r\n  const toggleHideDone = () => {\r\n    setHideDone(hideDone => !hideDone);\r\n  };\r\n\r\n  const removeTask = (id) => {\r\n    setTasks(tasks => tasks.filter(task => task.id !== id));\r\n  };\r\n\r\n  const toggleTaskDone = (id) => {\r\n    setTasks(tasks => tasks.map(task => {\r\n      if (task.id === id) {\r\n        return { ...task, done: !task.done };\r\n      }\r\n\r\n      return task;\r\n    }));\r\n  };\r\n\r\n  const setAllDone = () => {\r\n    setTasks(tasks => tasks.map(task => ({\r\n      ...task,\r\n      done: true,\r\n    })));\r\n  };\r\n\r\n  const addNewTask = (content) => {\r\n    setTasks(tasks => [\r\n      ...tasks,\r\n      {\r\n        content,\r\n        done: false,\r\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\r\n      },\r\n    ]);\r\n  };\r\n\r\nuseEffect(() => {\r\n  const tasks = JSON.parse(localStorage.getItem('tasks'));\r\n\r\n  if (tasks !== null) {\r\n    setTasks(tasks);\r\n  }\r\n}, []);\r\n\r\nuseEffect(() => {\r\n  localStorage.setItem('tasks', JSON.stringify(tasks));\r\n}, [tasks]);\r\n \r\n  return (\r\n    <Container>\r\n      <Header title=\"Lista zadaÅ„\" />\r\n      <Section\r\n        title=\"Dodaj nowe zadanie\"\r\n        body={<Form addNewTask={addNewTask} />}\r\n      />\r\n\r\n      <Section\r\n        title=\"Lista zadaÅ„\"\r\n        body={\r\n          <Tasks\r\n            tasks={tasks}\r\n            hideDone={hideDone}\r\n            removeTask={removeTask}\r\n            toggleTaskDone={toggleTaskDone}\r\n          />\r\n        }\r\n        extraHeaderContent={\r\n          <Buttons\r\n            tasks={tasks}\r\n            hideDone={hideDone}\r\n            toggleHideDone={toggleHideDone}\r\n            setAllDone={setAllDone}\r\n          />\r\n        }\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyle} from \"./GlobalStyle\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { theme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\r\n    color: {\r\n        black: \"#000\",\r\n        silver: \"#ccc\",\r\n        alto: \"#ddd\",\r\n        gallery: \"#eee\",\r\n        white: \"#fff\",\r\n        teal: \"#008080\",\r\n        crimson: \"#db143c\",\r\n        forestGreen: \"#228c22\",\r\n    },\r\n    breakpoint: {\r\n        mobileMax: 767,\r\n    },\r\n};"],"sourceRoot":""}