{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","addNewTask","useState","newTaskContent","setNewTaskContent","className","onSubmit","event","preventDefault","trim","value","placeholder","onChange","target","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","done","onClick","id","content","Buttons","toggleHideDone","setAllDone","length","autofocus","disabled","every","Section","title","body","extraHeaderContent","Header","Container","children","App","setHideDone","setTasks","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b957b422.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({addNewTask}) => { \r\nconst [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\nconst onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    addNewTask(newTaskContent.trim());\r\n    setNewTaskContent(\"\");\r\n};\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onFormSubmit}>\r\n        <input \r\n        value={newTaskContent}\r\n        className=\"form__input\" \r\n        placeholder=\"Co jest do zrobienia?\" \r\n        onChange={({ target }) => setNewTaskContent(target.value)}\r\n        />\r\n        \r\n        <button className=\"form__button\">Dodaj zadanie</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default Form;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <ul className=\"tasks\">\r\n    {tasks.map(task => (\r\n        <li\r\n        key={task.id}\r\n            className={\r\n            `tasks__item${\r\n            task.done && hideDone ? \r\n            \"tasks__item--hidden\" : \"\"}`\r\n            }>\r\n            <button \r\n            className=\"tasks__button tasks__button--toggleDone\"\r\n            onClick={() => toggleTaskDone(task.id)}\r\n            >\r\n                {task.done ? \"‚úî\" : \"\"}\r\n            </button>\r\n            <span className={\r\n            `tasks__content${\r\n            task.done ? \" tasks__content--done\" : \"\"}`\r\n            }>\r\n             {task.id} - {task.content}\r\n            </span>\r\n            <button \r\n            className=\"tasks__button tasks__button--remove\"\r\n            onClick={() => removeTask(task.id)}\r\n            >\r\n                üß∫\r\n            </button>\r\n        </li>\r\n    ))}\r\n</ul>\r\n); \r\n\r\nexport default Tasks;\r\n\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n        <div className=\"buttons\">\r\n        {tasks.length > 0 && (\r\n            <>\r\n            <button onClick={toggleHideDone}\r\n                className=\"buttons__button\">\r\n                {hideDone ? \"Poka≈º\" : \"Ukryj\"} uko≈Ñczone\r\n            </button>\r\n            <button\r\n                onClick={setAllDone}\r\n                className=\"buttons__button\"\r\n                autofocus\r\n                disabled={tasks.every(({ done }) => done)}\r\n            >\r\n                Uko≈Ñcz wszystkie\r\n            </button>\r\n            </>\r\n        )}\r\n        </div>\r\n    \r\n);\r\n\r\nexport default Buttons;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n    <section className=\"section\">\r\n        <header className=\"section__header\">\r\n          <h2 className=\"section__title\">{title}</h2>\r\n          {extraHeaderContent}\r\n        </header>\r\n        <div className=\"section__body\">\r\n         {body}\r\n        </div>\r\n      </section>\r\n);\r\n\r\nexport default Section;","import React from \"react\";\r\n\r\nconst Header = ({ title }) => (\r\n    <header className=\"header\">\r\n        <h1>{title}</h1>\r\n      </header>\r\n);\r\n\r\nexport default Header; \r\n\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Container = ({ children }) => (\r\n    <main className=\"container\">\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import React, { useState } from 'react';\r\nimport Form from \"./Form\";\r\nimport Tasks from \"./Tasks\";\r\nimport Buttons from \"./Buttons\";\r\nimport Section from \"./Section\";\r\nimport Header from \"./Header\";\r\nimport Container from \"./Container\";\r\n\r\n\r\nfunction App() {\r\nconst [hideDone, setHideDone] = useState(false);\r\nconst [tasks, setTasks] = useState([\r\n  { id: 1, content: \"przej≈õƒá na Reacta\", done: false },\r\n  { id: 2, content: \"poj≈õƒá na trening\", done: true },\r\n]);\r\n\r\nconst toggleHideDone = () => {\r\n  setHideDone(hideDone => !hideDone);\r\n};\r\n\r\nconst removeTask = (id) => {\r\n  setTasks(tasks => tasks.filter(task => task.id !== id));\r\n};\r\n\r\nconst toggleTaskDone = (id) => {\r\n  setTasks(tasks => tasks.map(task => {\r\n    if (task.id === id) {\r\n      return { ...task, done: !task.done };\r\n    }\r\n\r\n    return task;\r\n  }));\r\n};\r\n\r\nconst setAllDone = () => {\r\n  setTasks(tasks => tasks.map(task => ({\r\n    ...task, \r\n    done: true,\r\n  })));\r\n};\r\n\r\nconst addNewTask = (content) => {\r\n  setTasks(tasks => [\r\n    ...tasks, \r\n    {\r\n      content, \r\n      done: false,\r\n      id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1,\r\n    },\r\n  ]);\r\n}; \r\n\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Header title=\"Lista zada≈Ñ\" />\r\n      <Section \r\n      title=\"Dodaj nowe zadanie\" \r\n      body={<Form addNewTask={addNewTask} />} \r\n      />\r\n\r\n      <Section\r\n      title=\"Lista zada≈Ñ\"\r\n      body={\r\n      <Tasks \r\n      tasks={tasks} \r\n      hideDone={hideDone} \r\n      removeTask={removeTask} \r\n      toggleTaskDone={toggleTaskDone}\r\n      />\r\n      }\r\n      extraHeaderContent={\r\n      <Buttons \r\n      tasks={tasks} \r\n      hideDone={hideDone} \r\n      toggleHideDone={toggleHideDone} \r\n      setAllDone={setAllDone}\r\n      />\r\n      }\r\n      />\r\n      </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}